# -*- coding: utf-8 -*-
"""subscrib_model/

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YwF7gVR3Mvl7_T9xBToNGD1P4gX6IZT-
"""

#video_subscribe_predictor.py
import pandas as pd
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.pipeline import Pipeline
from sklearn.metrics import accuracy_score
import joblib

#建立實際資料集
df = pd.DataFrame({
    'title':['如何用Python做影片分析','巴黎觀光VLOG','一日健身飲食紀錄','最強iPhone15實測'],
    'length_sec':[600, 1200, 480, 300],
    'category':['教學','觀光','生活','科技'],
    'has_face':[1,1,0,1],
    'keyword_density':[0.05,0.03,0.02,0.06],
    'weekday_uploaded':[0.05,0.03,0.02,0.06],
    'is_subscribe_growth':[1,0,0,1]
    })

#one-hot encode category
df = pd.get_dummies(df,columns=['category'])

#分割特徵和標榜
x = df.drop(columns=['is_subscribe_growth', 'title']) # Exclude 'title' column
y = df['is_subscribe_growth']

#分割訓練和測試資料
X_train,X_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=42)

#建立隨機森林模型
model = RandomForestClassifier(n_estimators=100,random_state=42)
model.fit(X_train, y_train)

#預測
y_pred=model.predict(X_test)
print("準確率:",accuracy_score(y_test,y_pred))

#儲存模型
joblib.dump(model,'subscribe_predictor.pkl')
joblib.dump(list(x.columns),'feature_order.pkl')

#predict_example.py
import joblib
import pandas as pd

#載入模型和欄位順序
model = joblib.load('subscribe_predictor.pkl')
features = joblib.load('feature_order.pkl')

#輸入影片資料(手動程式產出)
new_video = pd.DataFrame([{
    'title':'教你5分鐘做出AI預測模型',
    'length_sec':420,
    'category_教學':1,
    'category_觀光':0,
    'category_生活':0,
    'category_科技':0,
    'has_face':1,
    'keyword_density':0.05,
    'weekday_uploaded':0

}])

# ensure feature order is consistent and drop the 'title' column before predicting
new_video = new_video.drop(columns=['title'])
new_video=new_video.reindex(columns=features,fill_value=0)

#預測是否能啟動訂閱
result = model.predict(new_video)[0]
print("預測結果:","有機會增加訂閱"if result ==1 else "訂閱增長機率低")